plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    modApi("me.shedaniel.cloth:cloth-config-fabric:$rootProject.cloth_config_version") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation "com.terraformersmc:modmenu:7.2.2"

    modLocalRuntime "net.fabricmc.fabric-api:fabric-api:0.92.2+1.20.1"
    modLocalRuntime "maven.modrinth:xaeros-minimap:$rootProject.xaeros_minimap_fabric_version"
    modLocalRuntime "maven.modrinth:xaeros-world-map:$rootProject.xaeros_world_map_fabric_version"
    modImplementation "maven.modrinth:inventory-profiles-next:$rootProject.ipn_fabric_version"

    shadowBundle "blue.endless:jankson:1.2.3"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
    from(rootProject.file("assets/icon.png")) {
        rename { "assets/$rootProject.archives_name/icon.png" }
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'

    relocate 'blue.endless.jankson', "${maven_group}.libs.jankson"
}

remapJar {
    input.set shadowJar.archiveFile
}
