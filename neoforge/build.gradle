plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'tterag maven'
        url = 'https://maven.tterrag.com/'
    }
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    modImplementation "me.shedaniel.cloth:cloth-config-forge:$rootProject.cloth_config_version"

//    localRuntime("io.github.llamalad7:mixinextras-forge:0.3.6")
//    modImplementation "maven.modrinth:quark:$rootProject.quark_version"
//    modLocalRuntime "maven.modrinth:zeta:$rootProject.zeta_version"
//    modImplementation "maven.modrinth:alexs-caves:$rootProject.alexs_caves_version"
//    modImplementation "maven.modrinth:citadel:$rootProject.citadel_version"
    modImplementation "maven.modrinth:petrolpark:$rootProject.petrolpark_version"
    modImplementation "maven.modrinth:inventory-profiles-next:$rootProject.ipn_neoforge_version"
    modImplementation "maven.modrinth:blueprint:$rootProject.blueprint_version"
    modImplementation "com.aetherteam.nitrogen:nitrogen_internals:$rootProject.nitrogen_neoforge_version"
    modImplementation "maven.modrinth:bagus-lib:$rootProject.bagus_lib_neoforge_version"
    modImplementation "maven.modrinth:immersiveengineering:$rootProject.immersive_engineering_neoforge_version"

    shadowBundle "blue.endless:jankson:1.2.3"
    forgeRuntimeLibrary "blue.endless:jankson:1.2.3"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
    from(rootProject.file("assets/icon.png")) {
        rename { "$rootProject.archives_name-icon.png" }
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'

    relocate 'blue.endless.jankson', "${maven_group}.libs.jankson"
}

remapJar {
    input.set shadowJar.archiveFile
}
